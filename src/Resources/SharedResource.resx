<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AnErrorOccurred" xml:space="preserve">
    <value>An error occurred.</value>
  </data>
  <data name="BingImageByteSizeExceedsLimit" xml:space="preserve">
    <value>Image size exceeds the limit (Max. 20MB).</value>
  </data>
  <data name="BingImageDimensionsExceedLimit" xml:space="preserve">
    <value>Image dimensions exceeds the limit (Max. 4000px).</value>
  </data>
  <data name="BingImageDownloadFailed" xml:space="preserve">
    <value>Bing Visual search failed to download the image.</value>
  </data>
  <data name="BingServiceUnavailable" xml:space="preserve">
    <value>Bing Visual search is currently unavailable. Try again later.</value>
  </data>
  <data name="BingUnknownFormat" xml:space="preserve">
    <value>Unknown format. Try using JPEG, PNG, or BMP files.</value>
  </data>
  <data name="Blacklisted" xml:space="preserve">
    <value>You're blacklisted.</value>
  </data>
  <data name="BlacklistedWithReason" xml:space="preserve">
    <value>You're blacklisted with reason: {0}</value>
  </data>
  <data name="CouldNotConvertValueToColor" xml:space="preserve">
    <value>Could not convert \"{0}\" to a color.</value>
  </data>
  <data name="ErrorMessage" xml:space="preserve">
    <value>Error message: {0}</value>
  </data>
  <data name="ExpiredJumpInput" xml:space="preserve">
    <value>Expired modal interaction. You must respond within {0} second(s).</value>
  </data>
  <data name="Input" xml:space="preserve">
    <value>Input</value>
  </data>
  <data name="InvalidJumpInput" xml:space="preserve">
    <value>Invalid input. The number must be in the range of {0} to {1}, excluding the current page.</value>
  </data>
  <data name="InvalidSourceLanguage" xml:space="preserve">
    <value>Invalid source language \"{0}\".</value>
  </data>
  <data name="InvalidTargetLanguage" xml:space="preserve">
    <value>Invalid target language \"{0}\".</value>
  </data>
  <data name="JumpInputInUse" xml:space="preserve">
    <value>Another user is currently using this action. Try again later.</value>
  </data>
  <data name="JumpInputPrompt" xml:space="preserve">
    <value>Enter a page number</value>
  </data>
  <data name="JumptInputTextLabel" xml:space="preserve">
    <value>Page number ({0}-{1})</value>
  </data>
  <data name="LanguageNotSupported" xml:space="preserve">
    <value>Language \"{0}\" not supported.</value>
  </data>
  <data name="NoImageUrlInMessage" xml:space="preserve">
    <value>Unable to get an image URL from the message.</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="NoResults" xml:space="preserve">
    <value>No results.</value>
  </data>
  <data name="NumberExcess" xml:space="preserve">
    <value>and {0} more...</value>
  </data>
  <data name="Output" xml:space="preserve">
    <value>Output</value>
  </data>
  <data name="PaginatorFooter" xml:space="preserve">
    <value>Page {0} of {1}</value>
  </data>
  <data name="Ratelimited" xml:space="preserve">
    <value>This command is on cooldown! Try again in {0} second(s).</value>
  </data>
  <data name="Result" xml:space="preserve">
    <value>Result</value>
  </data>
  <data name="SourceLanguage" xml:space="preserve">
    <value>Source language</value>
  </data>
  <data name="SourceLanguageDetected" xml:space="preserve">
    <value>Source language (Detected)</value>
  </data>
  <data name="TargetLanguage" xml:space="preserve">
    <value>Target language</value>
  </data>
  <data name="TextMustNotBeEmpty" xml:space="preserve">
    <value>The text must not be empty.</value>
  </data>
  <data name="TranslationResult" xml:space="preserve">
    <value>Translation result</value>
  </data>
  <data name="UnableToGetVoice" xml:space="preserve">
    <value>Unable to get the specified voice. Use the autocomplete results.</value>
  </data>
  <data name="UnknownPaginatorBuilderType" xml:space="preserve">
    <value>Unknown paginator builder type</value>
  </data>
  <data name="UrlNotWellFormed" xml:space="preserve">
    <value>The URL is not well-formed.</value>
  </data>
  <data name="UrlOrAttachmentRequired" xml:space="preserve">
    <value>A URL or attachment is required.</value>
  </data>
</root>