<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Command output" xml:space="preserve">
    <value>Salida de comando</value>
  </data>
  <data name="Fergun2Info" xml:space="preserve">
    <value>Bienvenido(a) a **Fergun** 2, una reescritura completa de Fergun 1 que usa slash commands.
Fergun 2 se encuentra actualmente en beta abierta. Los comandos más utilizados se han reescrito para usar slash commands y más comandos serán agregados pronto.

Los siguientes módulos y comandos no se migrarán a Fergun 2 debido a varias razones:
- Módulo de **AI Dungeon**
- Módulo de **Música**
- Comandos de **snipe**

Puedes encontrar más información sobre la eliminación de estos módulos/comandos [aquí]({0}).</value>
  </data>
  <data name="Language Chain" xml:space="preserve">
    <value>Cadena de Idiomas</value>
  </data>
  <data name="No output." xml:space="preserve">
    <value>Sin salida.</value>
  </data>
  <data name="The chain count must be between 2 and 10 (inclusive)." xml:space="preserve">
    <value>El número de cadenas debe estar entre 2 y 10 (inclusivo).</value>
  </data>
  <data name="Wikipedia Search | Page {0} of {1}" xml:space="preserve">
    <value>Búsqueda de Wikipedia | Página {0} de {1}</value>
  </data>
  <data name="Active Clients" xml:space="preserve">
    <value>Clientes Activos</value>
  </data>
  <data name="Activities" xml:space="preserve">
    <value>Actividades</value>
  </data>
  <data name="Boosting Since" xml:space="preserve">
    <value>Mejorando desde</value>
  </data>
  <data name="Created At" xml:space="preserve">
    <value>Creado En</value>
  </data>
  <data name="Is Bot" xml:space="preserve">
    <value>Es Bot</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Nombre</value>
  </data>
  <data name="Server Join Date" xml:space="preserve">
    <value>Fecha de ingreso al servidor</value>
  </data>
  <data name="User Info" xml:space="preserve">
    <value>Información de usuario</value>
  </data>
  <data name="Default" xml:space="preserve">
    <value>Predeterminado</value>
  </data>
  <data name="Global" xml:space="preserve">
    <value>Global</value>
  </data>
  <data name="Server" xml:space="preserve">
    <value>Servidor</value>
  </data>
  <data name="{0} doesn't have a global (main) avatar." xml:space="preserve">
    <value>{0} no tiene un avatar global (principal).</value>
  </data>
  <data name="{0} doesn't have a server avatar." xml:space="preserve">
    <value>{0} no tiene un avatar de servidor.</value>
  </data>
  <data name="Fergun2SupportInfo" xml:space="preserve">
    <value>Si tiene alguna pregunta sobre la reescritura o tiene alguna sugerencia, no dude en unirse al servidor de soporte.</value>
  </data>
  <data name="Support Server" xml:space="preserve">
    <value>Servidor de soporte</value>
  </data>
  <data name="avatar.description" xml:space="preserve">
    <value>Muesta el avatar de un usuario.</value>
  </data>
  <data name="avatar.name" xml:space="preserve">
    <value>avatar</value>
  </data>
  <data name="avatar.type.description" xml:space="preserve">
    <value>Un tipo de avatar en específico.</value>
  </data>
  <data name="avatar.type.name" xml:space="preserve">
    <value>tipo</value>
  </data>
  <data name="avatar.user.description" xml:space="preserve">
    <value>El usuario.</value>
  </data>
  <data name="avatar.user.name" xml:space="preserve">
    <value>usuario</value>
  </data>
  <data name="bad-translator.chain-count.description" xml:space="preserve">
    <value>La cantidad de veces a traducir el texto.</value>
  </data>
  <data name="bad-translator.chain-count.name" xml:space="preserve">
    <value>cantidad-en-cadena</value>
  </data>
  <data name="bad-translator.description" xml:space="preserve">
    <value>Pasa un texto por varios traductores diferentes.</value>
  </data>
  <data name="bad-translator.name" xml:space="preserve">
    <value>traductor-malo</value>
  </data>
  <data name="bad-translator.text.description" xml:space="preserve">
    <value>El texto a usar.</value>
  </data>
  <data name="bad-translator.text.name" xml:space="preserve">
    <value>texto</value>
  </data>
  <data name="color.color.description" xml:space="preserve">
    <value>Un nombre de color (en Inglés), cadena hex. o valor en bruto. Dejar vacío para un color aleatorio.</value>
  </data>
  <data name="color.color.name" xml:space="preserve">
    <value>color</value>
  </data>
  <data name="color.description" xml:space="preserve">
    <value>Muestra un color.</value>
  </data>
  <data name="color.name" xml:space="preserve">
    <value>color</value>
  </data>
  <data name="help.description" xml:space="preserve">
    <value>Información sobre Fergun 2.</value>
  </data>
  <data name="help.name" xml:space="preserve">
    <value>ayuda</value>
  </data>
  <data name="ping.description" xml:space="preserve">
    <value>Envía el tiempo de respuesta del bot.</value>
  </data>
  <data name="ping.name" xml:space="preserve">
    <value>ping</value>
  </data>
  <data name="say.description" xml:space="preserve">
    <value>Dice algo.</value>
  </data>
  <data name="say.name" xml:space="preserve">
    <value>decir</value>
  </data>
  <data name="translate.description" xml:space="preserve">
    <value>Traduce un texto.</value>
  </data>
  <data name="translate.ephemeral.description" xml:space="preserve">
    <value>Si responder efímeramente.</value>
  </data>
  <data name="translate.ephemeral.name" xml:space="preserve">
    <value>efímero</value>
  </data>
  <data name="translate.name" xml:space="preserve">
    <value>traducir</value>
  </data>
  <data name="translate.source.description" xml:space="preserve">
    <value>El idioma de origen.</value>
  </data>
  <data name="translate.source.name" xml:space="preserve">
    <value>origen</value>
  </data>
  <data name="translate.target.description" xml:space="preserve">
    <value>El idioma de destino.</value>
  </data>
  <data name="translate.target.name" xml:space="preserve">
    <value>destino</value>
  </data>
  <data name="translate.text.description" xml:space="preserve">
    <value>El texto a traducir.</value>
  </data>
  <data name="translate.text.name" xml:space="preserve">
    <value>texto</value>
  </data>
  <data name="user.description" xml:space="preserve">
    <value>Obtiene información sobre un usuario.</value>
  </data>
  <data name="user.name" xml:space="preserve">
    <value>usuario</value>
  </data>
  <data name="user.user.description" xml:space="preserve">
    <value>El usuario.</value>
  </data>
  <data name="user.user.name" xml:space="preserve">
    <value>usuario</value>
  </data>
  <data name="wikipedia.description" xml:space="preserve">
    <value>Busca artículos de Wikipedia.</value>
  </data>
  <data name="wikipedia.name" xml:space="preserve">
    <value>wikipedia</value>
  </data>
  <data name="wikipedia.query.description" xml:space="preserve">
    <value>La consulta a buscar.</value>
  </data>
  <data name="wikipedia.query.name" xml:space="preserve">
    <value>consulta</value>
  </data>
  <data name="youtube.description" xml:space="preserve">
    <value>Envía un paginador conteniendo videos de YouTube.</value>
  </data>
  <data name="youtube.name" xml:space="preserve">
    <value>youtube</value>
  </data>
  <data name="youtube.query.description" xml:space="preserve">
    <value>La consulta a buscar.</value>
  </data>
  <data name="youtube.query.name" xml:space="preserve">
    <value>consulta</value>
  </data>
</root>