<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BotOwner" xml:space="preserve">
    <value>Dueño del bot</value>
  </data>
  <data name="BotVersion" xml:space="preserve">
    <value>Versión del bot</value>
  </data>
  <data name="CommandStats" xml:space="preserve">
    <value>Estadísticas de Comandos</value>
  </data>
  <data name="CPUUsage" xml:space="preserve">
    <value>Uso de CPU</value>
  </data>
  <data name="FergunStats" xml:space="preserve">
    <value>Estadísticas de Fergun</value>
  </data>
  <data name="GeniusPaginatorFooter" xml:space="preserve">
    <value>Letra por Genius | Página {0} de {1}</value>
  </data>
  <data name="InviteDescription" xml:space="preserve">
    <value>Haga click en el botón de abajo para invitar a Fergun a tu servidor.</value>
  </data>
  <data name="InviteFergun" xml:space="preserve">
    <value>Invita a Fergun</value>
  </data>
  <data name="Library" xml:space="preserve">
    <value>Librería</value>
  </data>
  <data name="Links" xml:space="preserve">
    <value>Enlaces</value>
  </data>
  <data name="LyricsEmpty" xml:space="preserve">
    <value>No es posible obtener la letra de "{0}".</value>
  </data>
  <data name="LyricsInstrumental" xml:space="preserve">
    <value>"{0}" es instrumental.</value>
  </data>
  <data name="LyricsNotFound" xml:space="preserve">
    <value>No se pudo encontrar una canción con ID {0}. Usa los resultados de autocompletado.</value>
  </data>
  <data name="LyricsRatelimited" xml:space="preserve">
    <value>No se puede obtener la letra solicitada ahora mismo. Intente nuevamente en {0}.</value>
  </data>
  <data name="LyricsRestricted" xml:space="preserve">
    <value>"{0}" tiene su letra restringida.</value>
  </data>
  <data name="LyricsUnreleased" xml:space="preserve">
    <value>"{0}" aún no ha sido lanzado.</value>
  </data>
  <data name="MusixmatchPaginatorFooter" xml:space="preserve">
    <value>Letra por Musixmatch | Página {0} de {1}</value>
  </data>
  <data name="NoStats" xml:space="preserve">
    <value>Sin estadísticas que mostrar.</value>
  </data>
  <data name="OpenInSpotify" xml:space="preserve">
    <value>Abrir en Spotify</value>
  </data>
  <data name="OperatingSystem" xml:space="preserve">
    <value>Sistema Operativo</value>
  </data>
  <data name="RAMUsage" xml:space="preserve">
    <value>Uso de RAM</value>
  </data>
  <data name="ShardID" xml:space="preserve">
    <value>ID de shard</value>
  </data>
  <data name="TotalServers" xml:space="preserve">
    <value>Servidores Totales</value>
  </data>
  <data name="TotalUsers" xml:space="preserve">
    <value>Usuarios Totales</value>
  </data>
  <data name="Uptime" xml:space="preserve">
    <value>Tiempo activo</value>
  </data>
  <data name="ViewArtist" xml:space="preserve">
    <value>Ver Artista</value>
  </data>
  <data name="ViewOnGenius" xml:space="preserve">
    <value>Ver en Genius</value>
  </data>
  <data name="ViewOnMusixmatch" xml:space="preserve">
    <value>Ver en Musixmatch</value>
  </data>
  <data name="NoSpotifyActivity" xml:space="preserve">
    <value>No se ha detectado la actividad de Spotify.</value>
  </data>
  <data name="NoSongMatchFound" xml:space="preserve">
    <value>No es posible obtener la letra de la canción "{0}".</value>
  </data>
  <data name="lyrics-spotify.description" xml:space="preserve">
    <value>Obtiene la letra de la canción que estás escuchando en Spotify.</value>
  </data>
  <data name="Note" xml:space="preserve">
    <value>Nota</value>
  </data>
  <data name="UseSpotifyLyricsCommand" xml:space="preserve">
    <value>ℹ️ Usa {0} para obtener fácilmente la letra de la canción que estás escuchando.</value>
  </data>
  <data name="command-stats.description" xml:space="preserve">
    <value>Muestra las estadísticas de uso de los comandos.</value>
  </data>
  <data name="command-stats.name" xml:space="preserve">
    <value>estadísticas-de-comandos</value>
  </data>
  <data name="inspirobot.description" xml:space="preserve">
    <value>Envía una cita inspiradora.</value>
  </data>
  <data name="inspirobot.name" xml:space="preserve">
    <value>inspirobot</value>
  </data>
  <data name="invite.description" xml:space="preserve">
    <value>Invita Fergun a tu servidor.</value>
  </data>
  <data name="invite.name" xml:space="preserve">
    <value>invitar</value>
  </data>
  <data name="lyrics.description" xml:space="preserve">
    <value>Obtiene la letra de una canción.</value>
  </data>
  <data name="lyrics.name" xml:space="preserve">
    <value>letra</value>
  </data>
  <data name="lyrics.name.description" xml:space="preserve">
    <value>El nombre de la canción.</value>
  </data>
  <data name="lyrics.name.name" xml:space="preserve">
    <value>nombre</value>
  </data>
  <data name="stats.description" xml:space="preserve">
    <value>Envía las estadísticas del bot.</value>
  </data>
  <data name="stats.name" xml:space="preserve">
    <value>estadísticas</value>
  </data>
  <data name="lyrics-spotify.name" xml:space="preserve">
    <value>letra-spotify</value>
  </data>
</root>